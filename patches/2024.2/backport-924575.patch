From 75609413bd20c83b403a253aa75c6e350eee7176 Mon Sep 17 00:00:00 2001
From: Maximilian Stinsky <maximilian.stinsky-damke@wiit.cloud>
Date: Fri, 19 Jul 2024 12:35:19 +0200
Subject: [PATCH] Implement neutron-ovn-vpn-agent

This patch implements vpnaas for ovn environements.
It deploys the new standalone neutron-ovn-vpn-agent on network nodes.
For this patch a new container image is required [1].

[1] https://review.opendev.org/c/openstack/kolla/+/924302

Closes-Bug: #2048392
Change-Id: I961b1407ae1402d146f0c09924df8e007e331af5
---

diff --git a/ansible/inventory/all-in-one b/ansible/inventory/all-in-one
index 77514bf..d075aa2 100644
--- a/ansible/inventory/all-in-one
+++ b/ansible/inventory/all-in-one
@@ -252,6 +252,9 @@
 [neutron-bgp-dragent:children]
 neutron
 
+[neutron-ovn-vpn-agent:children]
+network
+
 [neutron-infoblox-ipam-agent:children]
 neutron
 
diff --git a/ansible/inventory/multinode b/ansible/inventory/multinode
index c05a042..ab15463 100644
--- a/ansible/inventory/multinode
+++ b/ansible/inventory/multinode
@@ -280,6 +280,9 @@
 compute
 network
 
+[neutron-ovn-vpn-agent:children]
+network
+
 # Cinder
 [cinder-api:children]
 cinder
diff --git a/ansible/roles/neutron/defaults/main.yml b/ansible/roles/neutron/defaults/main.yml
index 0f52334..125b4c2 100644
--- a/ansible/roles/neutron/defaults/main.yml
+++ b/ansible/roles/neutron/defaults/main.yml
@@ -208,6 +208,15 @@
     volumes: "{{ neutron_ovn_agent_default_volumes + neutron_ovn_agent_extra_volumes }}"
     dimensions: "{{ neutron_ovn_agent_dimensions }}"
     healthcheck: "{{ neutron_ovn_agent_healthcheck }}"
+  neutron-ovn-vpn-agent:
+    container_name: "neutron_ovn_vpn_agent"
+    image: "{{ neutron_ovn_vpn_agent_image_full }}"
+    enabled: "{{ enable_neutron_vpnaas | bool and neutron_plugin_agent == 'ovn' }}"
+    privileged: True
+    host_in_groups: "{{ inventory_hostname in groups['neutron-ovn-vpn-agent'] }}"
+    volumes: "{{ neutron_ovn_vpn_agent_default_volumes + neutron_ovn_vpn_agent_extra_volumes }}"
+    dimensions: "{{ neutron_ovn_vpn_agent_dimensions }}"
+    healthcheck: "{{ neutron_ovn_vpn_agent_healthcheck }}"
 
 ####################
 # Config Validate
@@ -327,6 +336,10 @@
 neutron_ovn_agent_tag: "{{ neutron_tag }}"
 neutron_ovn_agent_image_full: "{{ neutron_ovn_agent_image }}:{{ neutron_ovn_agent_tag }}"
 
+neutron_ovn_vpn_agent_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/neutron-ovn-vpn-agent"
+neutron_ovn_vpn_agent_tag: "{{ neutron_tag }}"
+neutron_ovn_vpn_agent_image_full: "{{ neutron_ovn_vpn_agent_image }}:{{ neutron_ovn_vpn_agent_tag }}"
+
 neutron_agent_dimensions: "{{ default_container_dimensions }}"
 
 neutron_dhcp_agent_dimensions: "{{ neutron_agent_dimensions }}"
@@ -345,6 +358,7 @@
 ironic_neutron_agent_dimensions: "{{ default_container_dimensions }}"
 neutron_tls_proxy_dimensions: "{{ default_container_dimensions }}"
 neutron_ovn_agent_dimensions: "{{ neutron_agent_dimensions }}"
+neutron_ovn_vpn_agent_dimensions: "{{ neutron_agent_dimensions }}"
 
 neutron_dhcp_agent_enable_healthchecks: "{{ enable_container_healthchecks }}"
 neutron_dhcp_agent_healthcheck_interval: "{{ default_container_healthcheck_interval }}"
@@ -502,6 +516,19 @@
   test: "{% if ironic_neutron_agent_enable_healthchecks | bool %}{{ ironic_neutron_agent_healthcheck_test }}{% else %}NONE{% endif %}"
   timeout: "{{ ironic_neutron_agent_healthcheck_timeout }}"
 
+neutron_ovn_vpn_agent_enable_healthchecks: "{{ enable_container_healthchecks }}"
+neutron_ovn_vpn_agent_healthcheck_interval: "{{ default_container_healthcheck_interval }}"
+neutron_ovn_vpn_agent_healthcheck_retries: "{{ default_container_healthcheck_retries }}"
+neutron_ovn_vpn_agent_healthcheck_start_period: "{{ default_container_healthcheck_start_period }}"
+neutron_ovn_vpn_agent_healthcheck_test: ["CMD-SHELL", "healthcheck_port python {{ ovn_sb_db_port }}", "&&", "healthcheck_port neutron-ovn-vpn-agent {{ om_rpc_port }}"]
+neutron_ovn_vpn_agent_healthcheck_timeout: "{{ default_container_healthcheck_timeout }}"
+neutron_ovn_vpn_agent_healthcheck:
+  interval: "{{ neutron_ovn_vpn_agent_healthcheck_interval }}"
+  retries: "{{ neutron_ovn_vpn_agent_healthcheck_retries }}"
+  start_period: "{{ neutron_ovn_vpn_agent_healthcheck_start_period }}"
+  test: "{% if neutron_ovn_vpn_agent_enable_healthchecks | bool %}{{ neutron_ovn_vpn_agent_healthcheck_test }}{% else %}NONE{% endif %}"
+  timeout: "{{ neutron_ovn_vpn_agent_healthcheck_timeout }}"
+
 neutron_dhcp_agent_default_volumes:
   - "{{ node_config_directory }}/neutron-dhcp-agent/:{{ container_config_directory }}/:ro"
   - "/etc/localtime:/etc/localtime:ro"
@@ -605,6 +632,12 @@
   - "/etc/localtime:/etc/localtime:ro"
   - "{{ '/etc/timezone:/etc/timezone:ro' if ansible_facts.os_family == 'Debian' else '' }}"
   - "kolla_logs:/var/log/kolla/"
+neutron_ovn_vpn_agent_default_volumes:
+  - "{{ node_config_directory }}/neutron-ovn-vpn-agent/:{{ container_config_directory }}/:ro"
+  - "/etc/localtime:/etc/localtime:ro"
+  - "{{ '/etc/timezone:/etc/timezone:ro' if ansible_facts.os_family == 'Debian' else '' }}"
+  - "/run/netns:/run/netns:shared"
+  - "kolla_logs:/var/log/kolla/"
 
 neutron_extra_volumes: "{{ default_extra_volumes }}"
 neutron_dhcp_agent_extra_volumes: "{{ neutron_extra_volumes }}"
@@ -623,6 +656,7 @@
 ironic_neutron_agent_extra_volumes: "{{ neutron_extra_volumes }}"
 neutron_tls_proxy_extra_volumes: "{{ neutron_extra_volumes }}"
 neutron_ovn_agent_extra_volumes: "{{ neutron_extra_volumes }}"
+neutron_ovn_vpn_agent_extra_volumes: "{{ neutron_extra_volumes }}"
 
 ####################
 # OpenStack
@@ -746,7 +780,9 @@
   - name: "trunk"
     enabled: "{{ enable_neutron_trunk | bool }}"
   - name: "vpnaas"
-    enabled: "{{ enable_neutron_vpnaas | bool }}"
+    enabled: "{{ enable_neutron_vpnaas | bool and neutron_plugin_agent != 'ovn' }}"
+  - name: "ovn-vpnaas"
+    enabled: "{{ enable_neutron_vpnaas | bool and neutron_plugin_agent == 'ovn' }}"
   - name: "port_forwarding"
     enabled: "{{ enable_neutron_port_forwarding | bool }}"
   - name: "ovn-router"
diff --git a/ansible/roles/neutron/handlers/main.yml b/ansible/roles/neutron/handlers/main.yml
index 6d6a547..f970dcf 100644
--- a/ansible/roles/neutron/handlers/main.yml
+++ b/ansible/roles/neutron/handlers/main.yml
@@ -339,3 +339,20 @@
     healthcheck: "{{ service.healthcheck | default(omit) }}"
   when:
     - kolla_action != "config"
+
+- name: Restart neutron-ovn-vpn-agent container
+  vars:
+    service_name: "neutron-ovn-vpn-agent"
+    service: "{{ neutron_services[service_name] }}"
+  become: true
+  kolla_container:
+    action: "recreate_or_restart_container"
+    common_options: "{{ docker_common_options }}"
+    name: "{{ service.container_name }}"
+    image: "{{ service.image }}"
+    volumes: "{{ service.volumes }}"
+    dimensions: "{{ service.dimensions }}"
+    privileged: "{{ service.privileged | default(False) }}"
+    healthcheck: "{{ service.healthcheck | default(omit) }}"
+  when:
+    - kolla_action != "config"
diff --git a/ansible/roles/neutron/tasks/config.yml b/ansible/roles/neutron/tasks/config.yml
index ef5055e..ab6c0d3 100644
--- a/ansible/roles/neutron/tasks/config.yml
+++ b/ansible/roles/neutron/tasks/config.yml
@@ -104,6 +104,7 @@
       - "neutron-mlnx-agent"
       - "neutron-eswitchd"
       - "neutron-ovn-agent"
+      - "neutron-ovn-vpn-agent"
   merge_configs:
     sources:
       - "{{ role_path }}/templates/neutron.conf.j2"
@@ -379,6 +380,23 @@
   notify:
     - "Restart {{ service_name }} container"
 
+- name: Copying over neutron_ovn_vpn_agent.ini
+  become: true
+  vars:
+    service_name: "neutron-ovn-vpn-agent"
+    neutron_ovn_vpn_agent: "{{ neutron_services[service_name] }}"
+  merge_configs:
+    sources:
+      - "{{ role_path }}/templates/neutron_ovn_vpn_agent.ini.j2"
+      - "{{ node_custom_config }}/neutron/neutron_ovn_vpn_agent.ini"
+    dest: "{{ node_config_directory }}/{{ service_name }}/neutron_ovn_vpn_agent.ini"
+    mode: "0660"
+  when:
+    - neutron_ovn_vpn_agent.enabled | bool
+    - neutron_ovn_vpn_agent.host_in_groups | bool
+  notify:
+    - "Restart {{ service_name }} container"
+
 - name: Copying over metering_agent.ini
   become: true
   vars:
diff --git a/ansible/roles/neutron/templates/neutron-ovn-vpn-agent.json.j2 b/ansible/roles/neutron/templates/neutron-ovn-vpn-agent.json.j2
new file mode 100644
index 0000000..7b4b249
--- /dev/null
+++ b/ansible/roles/neutron/templates/neutron-ovn-vpn-agent.json.j2
@@ -0,0 +1,35 @@
+{
+    "command": "neutron-ovn-vpn-agent --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/neutron_ovn_vpn_agent.ini",
+    "config_files": [
+        {
+            "source": "{{ container_config_directory }}/neutron.conf",
+            "dest": "/etc/neutron/neutron.conf",
+            "owner": "neutron",
+            "perm": "0600"
+        },
+        {
+            "source": "{{ container_config_directory }}/neutron_ovn_vpn_agent.ini",
+            "dest": "/etc/neutron/neutron_ovn_vpn_agent.ini",
+            "owner": "neutron",
+            "perm": "0600"
+        }
+        {% if neutron_policy_file is defined %},{
+            "source": "{{ container_config_directory }}/{{ neutron_policy_file }}",
+            "dest": "/etc/neutron/{{ neutron_policy_file }}",
+            "owner": "neutron",
+            "perm": "0600"
+        }{% endif %}
+    ],
+    "permissions": [
+        {
+            "path": "/var/log/kolla/neutron",
+            "owner": "neutron:neutron",
+            "recurse": true
+        },
+        {
+            "path": "/var/lib/neutron/kolla",
+            "owner": "neutron:neutron",
+            "recurse": true
+        }
+    ]
+}
diff --git a/ansible/roles/neutron/templates/neutron_ovn_vpn_agent.ini.j2 b/ansible/roles/neutron/templates/neutron_ovn_vpn_agent.ini.j2
new file mode 100644
index 0000000..8caef06
--- /dev/null
+++ b/ansible/roles/neutron/templates/neutron_ovn_vpn_agent.ini.j2
@@ -0,0 +1,17 @@
+{% set vpn_device_driver = 'neutron_vpnaas.services.vpn.device_drivers.ovn_ipsec.OvnStrongSwanDriver' if kolla_base_distro in ['ubuntu', 'debian'] else 'neutron_vpnaas.services.vpn.device_drivers.ovn_ipsec.OvnLibreSwanDriver' %}
+[DEFAULT]
+transport_url = {{ rpc_transport_url }}
+interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver
+
+[AGENT]
+extensions = vpnaas
+
+[vpnagent]
+vpn_device_driver = {{ vpn_device_driver }}
+
+[ovs]
+ovsdb_connection = tcp:127.0.0.1:{{ ovsdb_port }}
+ovsdb_timeout = {{ ovsdb_timeout }}
+
+[ovn]
+ovn_sb_connection = {{ ovn_sb_connection }}
diff --git a/ansible/roles/neutron/templates/neutron_vpnaas.conf.j2 b/ansible/roles/neutron/templates/neutron_vpnaas.conf.j2
index 6fbb615..c0a4a77 100644
--- a/ansible/roles/neutron/templates/neutron_vpnaas.conf.j2
+++ b/ansible/roles/neutron/templates/neutron_vpnaas.conf.j2
@@ -1,8 +1,13 @@
 {% if enable_neutron_vpnaas | bool %}
 [service_providers]
+{% if neutron_plugin_agent == 'ovn' %}
+{% set service_provider = 'VPN:strongswan:neutron_vpnaas.services.vpn.service_drivers.ovn_ipsec.IPsecOvnVPNDriver:default' if kolla_base_distro in ['ubuntu', 'debian'] else 'VPN:openswan:neutron_vpnaas.services.vpn.service_drivers.ovn_ipsec.IPsecOvnVPNDriver:default' %}
+service_provider = {{ service_provider }}
+{% else %}
 {% if neutron_plugin_agent == 'vmware_nsxv' %}
 service_provider = VPN:vmware:vmware_nsx.services.vpnaas.nsxv.ipsec_driver.NSXvIPsecVpnDriver:default
 {% else %}
 service_provider = VPN:openswan:neutron_vpnaas.services.vpn.service_drivers.ipsec.IPsecVPNDriver:default
 {% endif %}
 {% endif %}
+{% endif %}
diff --git a/releasenotes/notes/implement-neutron-ovn-vpn-agent-b848fb4c245e415e.yaml b/releasenotes/notes/implement-neutron-ovn-vpn-agent-b848fb4c245e415e.yaml
new file mode 100644
index 0000000..958d94a
--- /dev/null
+++ b/releasenotes/notes/implement-neutron-ovn-vpn-agent-b848fb4c245e415e.yaml
@@ -0,0 +1,5 @@
+---
+features:
+  - |
+    Add support for deploying neutron_ovn_vpn_agent.
+    This enables the use of vpnaas in ovn environemnts.
