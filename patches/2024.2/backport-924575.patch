commit 298d06f8117586e3aad7a39f6cea2eef0c05a1c9
Author: Maximilian Stinsky <maximilian.stinsky-damke@wiit.cloud>
Date:   Fri Jul 19 12:35:19 2024 +0200

    Implement neutron-ovn-vpn-agent
    
    This patch implements vpnaas for ovn environements.
    It deploys the new standalone neutron-ovn-vpn-agent on neutron nodes.
    
    Depends-On: https://review.opendev.org/c/openstack/kolla/+/924302
    Closes-Bug: #2048392
    Change-Id: I961b1407ae1402d146f0c09924df8e007e331af5
    (cherry picked from commit 26a44a696839f63b37f60365c229b47ea7520675)

diff --git a/ansible/inventory/all-in-one b/ansible/inventory/all-in-one
index 8d5c22344..b58400f70 100644
--- a/ansible/inventory/all-in-one
+++ b/ansible/inventory/all-in-one
@@ -252,6 +252,9 @@ compute
 [neutron-bgp-dragent:children]
 neutron
 
+[neutron-ovn-vpn-agent:children]
+neutron
+
 [neutron-infoblox-ipam-agent:children]
 neutron
 
diff --git a/ansible/inventory/multinode b/ansible/inventory/multinode
index a12c51dc9..7d9dd790c 100644
--- a/ansible/inventory/multinode
+++ b/ansible/inventory/multinode
@@ -280,6 +280,9 @@ neutron
 compute
 network
 
+[neutron-ovn-vpn-agent:children]
+neutron
+
 # Cinder
 [cinder-api:children]
 cinder
diff --git a/ansible/roles/neutron/defaults/main.yml b/ansible/roles/neutron/defaults/main.yml
index d480a8eac..c08cac50e 100644
--- a/ansible/roles/neutron/defaults/main.yml
+++ b/ansible/roles/neutron/defaults/main.yml
@@ -208,6 +208,17 @@ neutron_services:
     volumes: "{{ neutron_ovn_agent_default_volumes + neutron_ovn_agent_extra_volumes }}"
     dimensions: "{{ neutron_ovn_agent_dimensions }}"
     healthcheck: "{{ neutron_ovn_agent_healthcheck }}"
+  neutron-ovn-vpn-agent:
+    container_name: "neutron_ovn_vpn_agent"
+    image: "{{ neutron_ovn_vpn_agent_image_full }}"
+    # NOTE: Security: elevated privileges needed for oslo_privsep daemon
+    privileged: True
+    enabled: "{{ enable_neutron_vpnaas | bool and neutron_plugin_agent == 'ovn' }}"
+    group: neutron-ovn-vpn-agent
+    host_in_groups: "{{ inventory_hostname in groups['neutron-ovn-vpn-agent'] }}"
+    volumes: "{{ neutron_ovn_vpn_agent_default_volumes + neutron_ovn_vpn_agent_extra_volumes }}"
+    dimensions: "{{ neutron_ovn_vpn_agent_dimensions }}"
+    healthcheck: "{{ neutron_ovn_vpn_agent_healthcheck }}"
 
 ####################
 # Config Validate
@@ -327,6 +338,10 @@ neutron_ovn_agent_image: "{{ docker_registry ~ '/' if docker_registry else '' }}
 neutron_ovn_agent_tag: "{{ neutron_tag }}"
 neutron_ovn_agent_image_full: "{{ neutron_ovn_agent_image }}:{{ neutron_ovn_agent_tag }}"
 
+neutron_ovn_vpn_agent_image: "{{ docker_registry ~ '/' if docker_registry else '' }}{{ docker_namespace }}/neutron-ovn-vpn-agent"
+neutron_ovn_vpn_agent_tag: "{{ neutron_tag }}"
+neutron_ovn_vpn_agent_image_full: "{{ neutron_ovn_vpn_agent_image }}:{{ neutron_ovn_vpn_agent_tag }}"
+
 neutron_agent_dimensions: "{{ default_container_dimensions }}"
 
 neutron_dhcp_agent_dimensions: "{{ neutron_agent_dimensions }}"
@@ -345,6 +360,7 @@ neutron_metering_agent_dimensions: "{{ neutron_agent_dimensions }}"
 ironic_neutron_agent_dimensions: "{{ default_container_dimensions }}"
 neutron_tls_proxy_dimensions: "{{ default_container_dimensions }}"
 neutron_ovn_agent_dimensions: "{{ neutron_agent_dimensions }}"
+neutron_ovn_vpn_agent_dimensions: "{{ neutron_agent_dimensions }}"
 
 neutron_dhcp_agent_enable_healthchecks: "{{ enable_container_healthchecks }}"
 neutron_dhcp_agent_healthcheck_interval: "{{ default_container_healthcheck_interval }}"
@@ -502,6 +518,19 @@ ironic_neutron_agent_healthcheck:
   test: "{% if ironic_neutron_agent_enable_healthchecks | bool %}{{ ironic_neutron_agent_healthcheck_test }}{% else %}NONE{% endif %}"
   timeout: "{{ ironic_neutron_agent_healthcheck_timeout }}"
 
+neutron_ovn_vpn_agent_enable_healthchecks: "{{ enable_container_healthchecks }}"
+neutron_ovn_vpn_agent_healthcheck_interval: "{{ default_container_healthcheck_interval }}"
+neutron_ovn_vpn_agent_healthcheck_retries: "{{ default_container_healthcheck_retries }}"
+neutron_ovn_vpn_agent_healthcheck_start_period: "{{ default_container_healthcheck_start_period }}"
+neutron_ovn_vpn_agent_healthcheck_test: ["CMD-SHELL", "healthcheck_port python {{ ovn_sb_db_port }}", "&&", "healthcheck_port neutron-ovn-vpn-agent {{ om_rpc_port }}"]
+neutron_ovn_vpn_agent_healthcheck_timeout: "{{ default_container_healthcheck_timeout }}"
+neutron_ovn_vpn_agent_healthcheck:
+  interval: "{{ neutron_ovn_vpn_agent_healthcheck_interval }}"
+  retries: "{{ neutron_ovn_vpn_agent_healthcheck_retries }}"
+  start_period: "{{ neutron_ovn_vpn_agent_healthcheck_start_period }}"
+  test: "{% if neutron_ovn_vpn_agent_enable_healthchecks | bool %}{{ neutron_ovn_vpn_agent_healthcheck_test }}{% else %}NONE{% endif %}"
+  timeout: "{{ neutron_ovn_vpn_agent_healthcheck_timeout }}"
+
 neutron_dhcp_agent_default_volumes:
   - "{{ node_config_directory }}/neutron-dhcp-agent/:{{ container_config_directory }}/:ro"
   - "/etc/localtime:/etc/localtime:ro"
@@ -621,6 +650,12 @@ neutron_ovn_agent_default_volumes:
   - "{{ '/etc/timezone:/etc/timezone:ro' if ansible_facts.os_family == 'Debian' else '' }}"
   - "kolla_logs:/var/log/kolla/"
   - "{{ '/dev/shm:/dev/shm' if om_enable_queue_manager | bool else '' }}"
+neutron_ovn_vpn_agent_default_volumes:
+  - "{{ node_config_directory }}/neutron-ovn-vpn-agent/:{{ container_config_directory }}/:ro"
+  - "/etc/localtime:/etc/localtime:ro"
+  - "{{ '/etc/timezone:/etc/timezone:ro' if ansible_facts.os_family == 'Debian' else '' }}"
+  - "/run/netns:/run/netns:shared"
+  - "kolla_logs:/var/log/kolla/"
 
 neutron_extra_volumes: "{{ default_extra_volumes }}"
 neutron_dhcp_agent_extra_volumes: "{{ neutron_extra_volumes }}"
@@ -639,6 +674,7 @@ neutron_metering_agent_extra_volumes: "{{ neutron_extra_volumes }}"
 ironic_neutron_agent_extra_volumes: "{{ neutron_extra_volumes }}"
 neutron_tls_proxy_extra_volumes: "{{ neutron_extra_volumes }}"
 neutron_ovn_agent_extra_volumes: "{{ neutron_extra_volumes }}"
+neutron_ovn_vpn_agent_extra_volumes: "{{ neutron_extra_volumes }}"
 
 ####################
 # OpenStack
@@ -762,7 +798,9 @@ service_plugins:
   - name: "trunk"
     enabled: "{{ enable_neutron_trunk | bool }}"
   - name: "vpnaas"
-    enabled: "{{ enable_neutron_vpnaas | bool }}"
+    enabled: "{{ enable_neutron_vpnaas | bool and neutron_plugin_agent != 'ovn' }}"
+  - name: "ovn-vpnaas"
+    enabled: "{{ enable_neutron_vpnaas | bool and neutron_plugin_agent == 'ovn' }}"
   - name: "port_forwarding"
     enabled: "{{ enable_neutron_port_forwarding | bool }}"
   - name: "ovn-router"
diff --git a/ansible/roles/neutron/handlers/main.yml b/ansible/roles/neutron/handlers/main.yml
index 50ab08c06..c37f491b9 100644
--- a/ansible/roles/neutron/handlers/main.yml
+++ b/ansible/roles/neutron/handlers/main.yml
@@ -340,3 +340,20 @@
     healthcheck: "{{ service.healthcheck | default(omit) }}"
   when:
     - kolla_action != "config"
+
+- name: Restart neutron-ovn-vpn-agent container
+  vars:
+    service_name: "neutron-ovn-vpn-agent"
+    service: "{{ neutron_services[service_name] }}"
+  become: true
+  kolla_container:
+    action: "recreate_or_restart_container"
+    common_options: "{{ docker_common_options }}"
+    name: "{{ service.container_name }}"
+    image: "{{ service.image }}"
+    volumes: "{{ service.volumes }}"
+    dimensions: "{{ service.dimensions }}"
+    privileged: "{{ service.privileged | default(False) }}"
+    healthcheck: "{{ service.healthcheck | default(omit) }}"
+  when:
+    - kolla_action != "config"
diff --git a/ansible/roles/neutron/tasks/config.yml b/ansible/roles/neutron/tasks/config.yml
index 8ba4e88a7..ebea81b8e 100644
--- a/ansible/roles/neutron/tasks/config.yml
+++ b/ansible/roles/neutron/tasks/config.yml
@@ -94,6 +94,7 @@
       - "neutron-mlnx-agent"
       - "neutron-eswitchd"
       - "neutron-ovn-agent"
+      - "neutron-ovn-vpn-agent"
   merge_configs:
     sources:
       - "{{ role_path }}/templates/neutron.conf.j2"
@@ -341,6 +342,23 @@
   notify:
     - "Restart {{ service_name }} container"
 
+- name: Copying over neutron_ovn_vpn_agent.ini
+  become: true
+  vars:
+    service_name: "neutron-ovn-vpn-agent"
+    neutron_ovn_vpn_agent: "{{ neutron_services[service_name] }}"
+  merge_configs:
+    sources:
+      - "{{ role_path }}/templates/neutron_ovn_vpn_agent.ini.j2"
+      - "{{ node_custom_config }}/neutron/neutron_ovn_vpn_agent.ini"
+    dest: "{{ node_config_directory }}/{{ service_name }}/neutron_ovn_vpn_agent.ini"
+    mode: "0660"
+  when:
+    - neutron_ovn_vpn_agent.enabled | bool
+    - neutron_ovn_vpn_agent.host_in_groups | bool
+  notify:
+    - "Restart {{ service_name }} container"
+
 - name: Copying over metering_agent.ini
   become: true
   vars:
diff --git a/ansible/roles/neutron/templates/neutron-ovn-vpn-agent.json.j2 b/ansible/roles/neutron/templates/neutron-ovn-vpn-agent.json.j2
new file mode 100644
index 000000000..7b4b2492c
--- /dev/null
+++ b/ansible/roles/neutron/templates/neutron-ovn-vpn-agent.json.j2
@@ -0,0 +1,35 @@
+{
+    "command": "neutron-ovn-vpn-agent --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/neutron_ovn_vpn_agent.ini",
+    "config_files": [
+        {
+            "source": "{{ container_config_directory }}/neutron.conf",
+            "dest": "/etc/neutron/neutron.conf",
+            "owner": "neutron",
+            "perm": "0600"
+        },
+        {
+            "source": "{{ container_config_directory }}/neutron_ovn_vpn_agent.ini",
+            "dest": "/etc/neutron/neutron_ovn_vpn_agent.ini",
+            "owner": "neutron",
+            "perm": "0600"
+        }
+        {% if neutron_policy_file is defined %},{
+            "source": "{{ container_config_directory }}/{{ neutron_policy_file }}",
+            "dest": "/etc/neutron/{{ neutron_policy_file }}",
+            "owner": "neutron",
+            "perm": "0600"
+        }{% endif %}
+    ],
+    "permissions": [
+        {
+            "path": "/var/log/kolla/neutron",
+            "owner": "neutron:neutron",
+            "recurse": true
+        },
+        {
+            "path": "/var/lib/neutron/kolla",
+            "owner": "neutron:neutron",
+            "recurse": true
+        }
+    ]
+}
diff --git a/ansible/roles/neutron/templates/neutron_ovn_vpn_agent.ini.j2 b/ansible/roles/neutron/templates/neutron_ovn_vpn_agent.ini.j2
new file mode 100644
index 000000000..8caef069a
--- /dev/null
+++ b/ansible/roles/neutron/templates/neutron_ovn_vpn_agent.ini.j2
@@ -0,0 +1,17 @@
+{% set vpn_device_driver = 'neutron_vpnaas.services.vpn.device_drivers.ovn_ipsec.OvnStrongSwanDriver' if kolla_base_distro in ['ubuntu', 'debian'] else 'neutron_vpnaas.services.vpn.device_drivers.ovn_ipsec.OvnLibreSwanDriver' %}
+[DEFAULT]
+transport_url = {{ rpc_transport_url }}
+interface_driver = neutron.agent.linux.interface.OVSInterfaceDriver
+
+[AGENT]
+extensions = vpnaas
+
+[vpnagent]
+vpn_device_driver = {{ vpn_device_driver }}
+
+[ovs]
+ovsdb_connection = tcp:127.0.0.1:{{ ovsdb_port }}
+ovsdb_timeout = {{ ovsdb_timeout }}
+
+[ovn]
+ovn_sb_connection = {{ ovn_sb_connection }}
diff --git a/ansible/roles/neutron/templates/neutron_vpnaas.conf.j2 b/ansible/roles/neutron/templates/neutron_vpnaas.conf.j2
index 6fbb6156a..c0a4a77c2 100644
--- a/ansible/roles/neutron/templates/neutron_vpnaas.conf.j2
+++ b/ansible/roles/neutron/templates/neutron_vpnaas.conf.j2
@@ -1,8 +1,13 @@
 {% if enable_neutron_vpnaas | bool %}
 [service_providers]
+{% if neutron_plugin_agent == 'ovn' %}
+{% set service_provider = 'VPN:strongswan:neutron_vpnaas.services.vpn.service_drivers.ovn_ipsec.IPsecOvnVPNDriver:default' if kolla_base_distro in ['ubuntu', 'debian'] else 'VPN:openswan:neutron_vpnaas.services.vpn.service_drivers.ovn_ipsec.IPsecOvnVPNDriver:default' %}
+service_provider = {{ service_provider }}
+{% else %}
 {% if neutron_plugin_agent == 'vmware_nsxv' %}
 service_provider = VPN:vmware:vmware_nsx.services.vpnaas.nsxv.ipsec_driver.NSXvIPsecVpnDriver:default
 {% else %}
 service_provider = VPN:openswan:neutron_vpnaas.services.vpn.service_drivers.ipsec.IPsecVPNDriver:default
 {% endif %}
 {% endif %}
+{% endif %}
diff --git a/doc/source/reference/networking/neutron-extensions.rst b/doc/source/reference/networking/neutron-extensions.rst
index 2e8be4b13..6d6bc7177 100644
--- a/doc/source/reference/networking/neutron-extensions.rst
+++ b/doc/source/reference/networking/neutron-extensions.rst
@@ -60,15 +60,20 @@ Verification
 VPNaaS is a complex subject, hence this document provides directions for a
 simple smoke test to verify the service is up and running.
 
-On the network node(s), the ``neutron_vpnaas_agent`` should be up (image naming
-and versioning may differ depending on deploy configuration):
+In ml2/ovn setups a special neutron_ovn_vpn_agent is running on neutron
+node(s).
+Version may differ depending on deploy configuration:
 
 .. code-block:: console
 
-   # docker ps --filter name=neutron_vpnaas_agent
+   # docker ps --filter name=neutron_ovn_vpn_agent
+
+    CONTAINER ID   IMAGE                                COMMAND                  CREATED      STATUS                PORTS     NAMES
+    7f6efad28d30   kolla/neutron-ovn-vpn-agent:18.1.0   "dumb-init --single-…"   7 days ago   Up 7 days (healthy)             neutron_ovn_vpn_agent
+
+On ml2/ovs deployments there is no special agent.
+The vpnaas code is running inside the neutron_l3_agent container.
 
-   CONTAINER ID   IMAGE                                                               COMMAND         CREATED          STATUS        PORTS  NAMES
-   97d25657d55e   operator:5000/kolla/centos-source-neutron-vpnaas-agent:4.0.0   "kolla_start"   44 minutes ago   Up 44 minutes        neutron_vpnaas_agent
 
 .. warning::
 
@@ -92,21 +97,20 @@ Verify both VPN services are active:
 
 .. code-block:: console
 
-   # neutron vpn-service-list
+   # openstack vpn service list
 
-   +--------------------------------------+----------+--------------------------------------+--------+
-   | id                                   | name     | router_id                            | status |
-   +--------------------------------------+----------+--------------------------------------+--------+
-   | ad941ec4-5f3d-4a30-aae2-1ab3f4347eb1 | vpn_west | 051f7ce3-4301-43cc-bfbd-7ffd59af539e | ACTIVE |
-   | edce15db-696f-46d8-9bad-03d087f1f682 | vpn_east | 058842e0-1d01-4230-af8d-0ba6d0da8b1f | ACTIVE |
-   +--------------------------------------+----------+--------------------------------------+--------+
+    +--------------------------------------+----------+--------------------------------------+--------+--------+-------+--------+
+    | ID                                   | Name     | Router                               | Subnet | Flavor | State | Status |
+    +--------------------------------------+----------+--------------------------------------+--------+--------+-------+--------+
+    | 03f85023-28d9-4f35-a10e-2c8dd3c11b65 | vpn_west | e3603217-fd22-404c-b27e-9285c2a79a17 | None   | None   | True  | ACTIVE |
+    | 1abdc71a-2eb7-4b2a-8871-eb9d91f39957 | vpn_east | 3485bdd2-4c42-449e-ae9f-d071a8cb9e5c | None   | None   | True  | ACTIVE |
+    +--------------------------------------+----------+--------------------------------------+--------+--------+-------+--------+
 
 Two VMs can now be booted, one on vpn_east, the other on vpn_west, and
 encrypted ping packets observed being sent from one to the other.
 
-For more information on this and VPNaaS in Neutron refer to the
-:neutron-vpnaas-doc:`Neutron VPNaaS Testing <contributor/index.html#testing>`
-and the `OpenStack wiki <https://wiki.openstack.org/wiki/Neutron/VPNaaS>`_.
+For more information on VPNaaS in Neutron refer to the
+`OpenStack docs <https://docs.openstack.org/neutron-vpnaas>`_.
 
 Trunking
 ~~~~~~~~
diff --git a/releasenotes/notes/implement-neutron-ovn-vpn-agent-b848fb4c245e415e.yaml b/releasenotes/notes/implement-neutron-ovn-vpn-agent-b848fb4c245e415e.yaml
new file mode 100644
index 000000000..dd9ab57a1
--- /dev/null
+++ b/releasenotes/notes/implement-neutron-ovn-vpn-agent-b848fb4c245e415e.yaml
@@ -0,0 +1,6 @@
+---
+features:
+  - |
+    Add support for deploying neutron_ovn_vpn_agent.
+    This enables the use of vpnaas in ovn environments.
+    <https://docs.openstack.org/kolla-ansible/latest/reference/networking/neutron-extensions.html#neutron-vpnaas-vpn-as-a-service>`__
diff --git a/tests/templates/inventory.j2 b/tests/templates/inventory.j2
index b5aadacd6..e5f15c396 100644
--- a/tests/templates/inventory.j2
+++ b/tests/templates/inventory.j2
@@ -332,6 +332,9 @@ neutron
 compute
 network
 
+[neutron-ovn-vpn-agent:children]
+neutron
+
 # Cinder
 [cinder-api:children]
 cinder
diff --git a/tools/init-vpn b/tools/init-vpn
index bdcc85c4b..d7b166ed5 100755
--- a/tools/init-vpn
+++ b/tools/init-vpn
@@ -2,65 +2,83 @@
 
 # Script originally copied from https://wiki.openstack.org/wiki/Neutron/VPNaaS/HowToInstall
 
-# Test for credentials set
-if [[ "${OS_USERNAME}" == "" ]]; then
-    echo "No Keystone credentials specified.  Try running source openrc"
-    exit
-fi
-
-EXT_NW_ID=`neutron net-list | awk '/public/{print $2}'`
-WEST_SUBNET='192.168.1.0/24'
-EAST_SUBNET='192.168.2.0/24'
+WEST_SUBNET='192.168.10.0/24'
+EAST_SUBNET='192.168.20.0/24'
 
 function setup_site(){
     local site_name=$1
     local cidr=$2
-    neutron net-create net_$site_name
-    neutron subnet-create --name subnet_$site_name net_$site_name $2
-    neutron router-create router_$site_name
-    neutron router-interface-add router_$site_name subnet_$site_name
-    neutron router-gateway-set router_$site_name $EXT_NW_ID
-    neutron vpn-service-create --name vpn_$site_name router_$site_name subnet_$site_name
+    openstack network create net_$site_name
+    openstack subnet create --network net_$site_name --subnet-range $cidr subnet_$site_name
+    openstack router create --external-gateway public1 router_$site_name
+    openstack router add subnet router_$site_name subnet_$site_name
+    openstack vpn service create vpn_$site_name --router router_$site_name
+    openstack vpn endpoint group create ${site_name}-local-epg --type subnet --value subnet_$site_name
 }
 
 function get_external_ip(){
-    local router_id=`neutron router-show $1 | awk '/ id /{print $4}'`
-    echo `neutron router-list | grep '$router_id' | awk -F '"' '{print $16}'`
+    openstack router show -f json $1 | jq -r '.external_gateways[].external_fixed_ips[0].ip_address'
 }
 
 function clean_site(){
     local site_name=$1
-    neutron ipsec-site-connection-delete conn_$site_name
-    neutron vpn-service-list | awk '/vpn_'$site_name'/{print "neutron vpn-service-delete " $2}' |
-bash
-    neutron router-gateway-clear router_$site_name
-    neutron router-interface-delete router_$site_name subnet_$site_name
-    neutron router-list | awk '/router_'$site_name'/{print "neutron router-delete " $2}' | bash
-    neutron subnet-list | awk '/subnet_'$site_name'/{print "neutron subnet-delete " $2}' | bash
-    neutron net-list | awk '/net_'$site_name'/{print "neutron net-delete " $2}' | bash
+    openstack vpn ipsec site connection delete conn_$site_name
+    openstack vpn service delete vpn_$site_name
+    openstack vpn endpoint group delete ${site_name}-local-epg
+    openstack router remove subnet router_$site_name subnet_$site_name
+    openstack router unset --external-gateway router_$site_name
+    openstack router delete router_$site_name
+    openstack subnet delete subnet_$site_name
+    openstack network delete net_$site_name
 }
 
 function setup(){
-    neutron vpn-ikepolicy-create ikepolicy1
-    neutron vpn-ipsecpolicy-create ipsecpolicy1
+    EXT_NW_ID=$(openstack network list --name public1 -f value -c ID)
+
+    openstack vpn ike policy create ikepolicy --ike-version v2 --auth-algorithm sha256 --encryption-algorithm aes-256 --pfs group14
+    openstack vpn ipsec policy create ipsecpolicy --auth-algorithm sha256 --encryption-algorithm aes-256 --pfs group14
+
     setup_site west $WEST_SUBNET
+    openstack vpn endpoint group create west-peer-epg --type cidr --value $EAST_SUBNET
     WEST_IP=$(get_external_ip router_west)
+
     setup_site east $EAST_SUBNET
+    openstack vpn endpoint group create east-peer-epg --type cidr --value $WEST_SUBNET
     EAST_IP=$(get_external_ip router_east)
-    neutron ipsec-site-connection-create --name conn_east --vpnservice-id vpn_east --ikepolicy-id \
-ikepolicy1 --ipsecpolicy-id ipsecpolicy1 --peer-address $WEST_IP --peer-id $WEST_IP --peer-cidr \
-$WEST_SUBNET --psk secret
-    neutron ipsec-site-connection-create --name conn_west --vpnservice-id vpn_west --ikepolicy-id \
-ikepolicy1 --ipsecpolicy-id ipsecpolicy1 --peer-address $EAST_IP --peer-id $EAST_IP --peer-cidr \
-$EAST_SUBNET --psk secret
+
+    openstack vpn ipsec site connection create conn_east --vpnservice vpn_east --ikepolicy ikepolicy \
+      --ipsecpolicy ipsecpolicy --local-endpoint-group east-local-epg --peer-address $WEST_IP \
+      --peer-id $WEST_IP --peer-endpoint-group east-peer-epg --psk secret
+
+    openstack vpn ipsec site connection create conn_west --vpnservice vpn_west --ikepolicy ikepolicy \
+      --ipsecpolicy ipsecpolicy --local-endpoint-group west-local-epg --peer-address $EAST_IP \
+      --peer-id $EAST_IP --peer-endpoint-group west-peer-epg --psk secret
 }
 
 function cleanup(){
     clean_site west
     clean_site east
-    neutron vpn-ikepolicy-delete ikepolicy1
-    neutron vpn-ipsecpolicy-delete ipsecpolicy1
+    openstack vpn endpoint group delete west-peer-epg
+    openstack vpn endpoint group delete east-peer-epg
+    openstack vpn ike policy delete ikepolicy
+    openstack vpn ipsec policy delete ipsecpolicy
+}
+
+function check() {
+  if [ -z ${OS_USERNAME} ]
+  then
+      echo "No Keystone credentials specified.  Try sourcing your /etc/kolla/admin-openrc.sh"
+      exit 1
+  fi
+
+
+  if ! command -v jq &> /dev/null
+  then
+      echo "jq could not be found but is required. Please install before using this script."
+      exit 1
+  fi
 }
 
+check
 cleanup
 setup
