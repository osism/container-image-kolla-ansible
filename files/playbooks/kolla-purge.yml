---
- name: Confirm whether user really meant to purge the kolla environment
  hosts: all

  vars_prompt:
    - name: ireallymeanit
      prompt: Are you sure you want to purge the kolla environment?
      default: 'no'
      private: false

    - name: ireallyreallymeanit
      prompt: Are you really sure you want to purge the kolla environment?
      default: 'no'
      private: false

  tasks:
    - name: Exit playbook, if user did not mean to purge the kolla environment
      fail:
        msg: >
          "To purge the kolla environment, either say 'yes' and 'ireallyreallymeanit'
           on the prompt or use `-e ireallymeanit=yes` and
           `-e ireallyreallymeanit=ireallyreallymeanit` on the command line when
           invoking the playbook"
      when:
        - ireallymeanit != 'yes' or ireallyreallymeanit != 'ireallyreallymeanit'

- name: Purge kolla environment
  hosts: all

  vars:
    destroy_include_images: false
    destroy_include_dev: false

  tasks:

    # source: https://stackoverflow.com/questions/46515704/how-to-kill-a-running-process-using-ansible
    - name: Get running qemu processes
      shell: "ps -ef | grep -v grep | grep -w qemu | awk '{print $2}'"
      register: running_processes

    - name: Kill running qemu processes
      shell: "kill {{ item }}"
      with_items: "{{ running_processes.stdout_lines }}"

    - wait_for:
        path: "/proc/{{ item }}/status"
        state: absent
      with_items: "{{ running_processes.stdout_lines }}"
      ignore_errors: true
      register: killed_processes

    - name: Force kill stuck qemu processes
      shell: "kill -9 {{ item }}"
      with_items: "{{ killed_processes.results | select('failed') | map(attribute='item') | list }}"

    - name: Destroying all kolla containers and volumes
      script: cleanup-containers

    - name: Destroying kolla host configuration
      become: true
      script: cleanup-host
      environment:
        enable_haproxy: "{{ enable_haproxy }}"
        enable_swift: "{{ enable_swift }}"
        elasticsearch_datadir_volume: "{{ elasticsearch_datadir_volume|default('elasticsearch') }}"
        glance_file_datadir_volume: "{{ glance_file_datadir_volume|default('glance') }}"
        nova_instance_datadir_volume: "{{ nova_instance_datadir_volume|default('nova_compute') }}"
        gnocchi_metric_datadir_volume: "{{ gnocchi_metric_datadir_volume|default('gnocchi') }}"
        kolla_internal_vip_address: "{{ kolla_internal_vip_address }}"
        kolla_external_vip_address: "{{ kolla_external_vip_address }}"
        kolla_dev_repos_directory: "{{ kolla_dev_repos_directory|default('/opt/stack/') }}"
        destroy_include_dev: "{{ destroy_include_dev }}"

    - name: Removing kolla images
      script: cleanup-images --all
      when:
        - destroy_include_images|bool
